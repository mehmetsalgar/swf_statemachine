/*
 * generated by Xtext 2.9.1
 */
grammar InternalStateMachineDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.salgar.swf_statemachine.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.salgar.swf_statemachine.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.salgar.swf_statemachine.xtext.services.StateMachineDslGrammarAccess;

}

@parser::members {

 	private StateMachineDslGrammarAccess grammarAccess;

    public InternalStateMachineDslParser(TokenStream input, StateMachineDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected StateMachineDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getElementsBaseParserRuleCall_0());
			}
			lv_elements_0_0=ruleBase
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"org.salgar.swf_statemachine.xtext.StateMachineDsl.Base");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRulePackageDeclaration
entryRulePackageDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageDeclarationRule()); }
	iv_rulePackageDeclaration=rulePackageDeclaration
	{ $current=$iv_rulePackageDeclaration.current; }
	EOF;

// Rule PackageDeclaration
rulePackageDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getPackageDeclarationAccess().getPackageKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.salgar.swf_statemachine.xtext.StateMachineDsl.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageDeclarationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageDeclarationAccess().getElementsBaseParserRuleCall_3_0());
				}
				lv_elements_3_0=ruleBase
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageDeclarationRule());
					}
					add(
						$current,
						"elements",
						lv_elements_3_0,
						"org.salgar.swf_statemachine.xtext.StateMachineDsl.Base");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPackageDeclarationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	iv_ruleStateMachine=ruleStateMachine
	{ $current=$iv_ruleStateMachine.current; }
	EOF;

// Rule StateMachine
ruleStateMachine returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='statemachine'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateMachineAccess().getStatemachineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStateMachineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateMachineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='initialState'
		{
			newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getInitialStateKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateMachineRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getStateMachineAccess().getInitialStateStateCrossReference_3_0());
				}
			)
		)
		otherlv_4='control-object'
		{
			newLeafNode(otherlv_4, grammarAccess.getStateMachineAccess().getControlObjectKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateMachineAccess().getControlObjectControlObjectParserRuleCall_5_0());
				}
				lv_controlObject_5_0=ruleControlObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateMachineRule());
					}
					set(
						$current,
						"controlObject",
						lv_controlObject_5_0,
						"org.salgar.swf_statemachine.xtext.StateMachineDsl.ControlObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='events'
			{
				newLeafNode(otherlv_6, grammarAccess.getStateMachineAccess().getEventsKeyword_6_0());
			}
			(
				otherlv_7='{'
				{
					newLeafNode(otherlv_7, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateMachineAccess().getEventsEventParserRuleCall_6_1_1_0());
						}
						lv_events_8_0=ruleEvent
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateMachineRule());
							}
							add(
								$current,
								"events",
								lv_events_8_0,
								"org.salgar.swf_statemachine.xtext.StateMachineDsl.Event");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_9='}'
				{
					newLeafNode(otherlv_9, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_6_1_2());
				}
			)
		)
		(
			otherlv_10='states'
			{
				newLeafNode(otherlv_10, grammarAccess.getStateMachineAccess().getStatesKeyword_7_0());
			}
			(
				otherlv_11='{'
				{
					newLeafNode(otherlv_11, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_7_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_7_1_1_0());
						}
						lv_states_12_0=ruleState
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getStateMachineRule());
							}
							add(
								$current,
								"states",
								lv_states_12_0,
								"org.salgar.swf_statemachine.xtext.StateMachineDsl.State");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_13='}'
				{
					newLeafNode(otherlv_13, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_7_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleBase
entryRuleBase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseRule()); }
	iv_ruleBase=ruleBase
	{ $current=$iv_ruleBase.current; }
	EOF;

// Rule Base
ruleBase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBaseAccess().getPackageDeclarationParserRuleCall_0());
		}
		this_PackageDeclaration_0=rulePackageDeclaration
		{
			$current = $this_PackageDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBaseAccess().getStateMachineParserRuleCall_1());
		}
		this_StateMachine_1=ruleStateMachine
		{
			$current = $this_StateMachine_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleState
entryRuleState returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	iv_ruleState=ruleState
	{ $current=$iv_ruleState.current; }
	EOF;

// Rule State
ruleState returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='state'
		{
			newLeafNode(otherlv_0, grammarAccess.getStateAccess().getStateKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getStateAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getStateRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStateAccess().getTransitionsTransitionParserRuleCall_3_0());
				}
				lv_transitions_3_0=ruleTransition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStateRule());
					}
					add(
						$current,
						"transitions",
						lv_transitions_3_0,
						"org.salgar.swf_statemachine.xtext.StateMachineDsl.Transition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getStateAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	iv_ruleTransition=ruleTransition
	{ $current=$iv_ruleTransition.current; }
	EOF;

// Rule Transition
ruleTransition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='transition'
		{
			newLeafNode(otherlv_0, grammarAccess.getTransitionAccess().getTransitionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='=>'
		{
			newLeafNode(otherlv_2, grammarAccess.getTransitionAccess().getEqualsSignGreaterThanSignKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTransitionRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getTransitionAccess().getTargetStateCrossReference_3_0());
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='trigger'
			{
				newLeafNode(otherlv_5, grammarAccess.getTransitionAccess().getTriggerKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTransitionRule());
						}
					}
					otherlv_7=RULE_ID
					{
						newLeafNode(otherlv_7, grammarAccess.getTransitionAccess().getTriggerEventCrossReference_5_2_0());
					}
				)
			)
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_5_3());
			}
		)
		(
			otherlv_9='guard'
			{
				newLeafNode(otherlv_9, grammarAccess.getTransitionAccess().getGuardKeyword_6_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getGuardGuardParserRuleCall_6_2_0());
					}
					lv_guard_11_0=ruleGuard
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						set(
							$current,
							"guard",
							lv_guard_11_0,
							"org.salgar.swf_statemachine.xtext.StateMachineDsl.Guard");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_6_3());
			}
		)?
		(
			otherlv_13='action'
			{
				newLeafNode(otherlv_13, grammarAccess.getTransitionAccess().getActionKeyword_7_0());
			}
			otherlv_14='{'
			{
				newLeafNode(otherlv_14, grammarAccess.getTransitionAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTransitionAccess().getActionActionParserRuleCall_7_2_0());
					}
					lv_action_15_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTransitionRule());
						}
						set(
							$current,
							"action",
							lv_action_15_0,
							"org.salgar.swf_statemachine.xtext.StateMachineDsl.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getTransitionAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='event'
		{
			newLeafNode(otherlv_0, grammarAccess.getEventAccess().getEventKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEventRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	iv_ruleGuard=ruleGuard
	{ $current=$iv_ruleGuard.current; }
	EOF;

// Rule Guard
ruleGuard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getGuardAccess().getGuardAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGuardAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGuardRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getActionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getActionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleControlObject
entryRuleControlObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlObjectRule()); }
	iv_ruleControlObject=ruleControlObject
	{ $current=$iv_ruleControlObject.current; }
	EOF;

// Rule ControlObject
ruleControlObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlObjectAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getControlObjectAccess().getAttributesControlObjectAttributeParserRuleCall_1_0());
				}
				lv_attributes_1_0=ruleControlObjectAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getControlObjectRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_1_0,
						"org.salgar.swf_statemachine.xtext.StateMachineDsl.ControlObjectAttribute");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getControlObjectAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleControlObjectAttribute
entryRuleControlObjectAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getControlObjectAttributeRule()); }
	iv_ruleControlObjectAttribute=ruleControlObjectAttribute
	{ $current=$iv_ruleControlObjectAttribute.current; }
	EOF;

// Rule ControlObjectAttribute
ruleControlObjectAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getControlObjectAttributeAccess().getAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getControlObjectAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getControlObjectAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='type'
			{
				newLeafNode(otherlv_2, grammarAccess.getControlObjectAttributeAccess().getTypeKeyword_2_0());
			}
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getControlObjectAttributeAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getControlObjectAttributeAccess().getTypeAttributeBaseParserRuleCall_2_2_0());
					}
					lv_type_4_0=ruleAttributeBase
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getControlObjectAttributeRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"org.salgar.swf_statemachine.xtext.StateMachineDsl.AttributeBase");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleAttributeBase
entryRuleAttributeBase returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeBaseRule()); }
	iv_ruleAttributeBase=ruleAttributeBase
	{ $current=$iv_ruleAttributeBase.current; }
	EOF;

// Rule AttributeBase
ruleAttributeBase returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAttributeBaseAccess().getObjectTypeParserRuleCall_0());
		}
		this_ObjectType_0=ruleObjectType
		{
			$current = $this_ObjectType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAttributeBaseAccess().getSimpleTypeParserRuleCall_1());
		}
		this_SimpleType_1=ruleSimpleType
		{
			$current = $this_SimpleType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSimpleType
entryRuleSimpleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeRule()); }
	iv_ruleSimpleType=ruleSimpleType
	{ $current=$iv_ruleSimpleType.current; }
	EOF;

// Rule SimpleType
ruleSimpleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSimpleTypeAccess().getTypeInternalTypeEnumRuleCall_0());
			}
			lv_type_0_0=ruleInternalType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getSimpleTypeRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.salgar.swf_statemachine.xtext.StateMachineDsl.InternalType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleObjectType
entryRuleObjectType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectTypeRule()); }
	iv_ruleObjectType=ruleObjectType
	{ $current=$iv_ruleObjectType.current; }
	EOF;

// Rule ObjectType
ruleObjectType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_type_0_0=RULE_STRING
			{
				newLeafNode(lv_type_0_0, grammarAccess.getObjectTypeAccess().getTypeSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getObjectTypeRule());
				}
				setWithLastConsumed(
					$current,
					"type",
					lv_type_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Rule InternalType
ruleInternalType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='NONE'
			{
				$current = grammarAccess.getInternalTypeAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getInternalTypeAccess().getNONEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='java.lang.Boolean'
			{
				$current = grammarAccess.getInternalTypeAccess().getBOOLEANEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getInternalTypeAccess().getBOOLEANEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='java.lang.Integer'
			{
				$current = grammarAccess.getInternalTypeAccess().getINTEGEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getInternalTypeAccess().getINTEGEREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='java.lang.Long'
			{
				$current = grammarAccess.getInternalTypeAccess().getLONGEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getInternalTypeAccess().getLONGEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='java.lang.Float'
			{
				$current = grammarAccess.getInternalTypeAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getInternalTypeAccess().getFLOATEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='java.lang.Decimal'
			{
				$current = grammarAccess.getInternalTypeAccess().getDECIMALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getInternalTypeAccess().getDECIMALEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='java.lang.String'
			{
				$current = grammarAccess.getInternalTypeAccess().getSTRINGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getInternalTypeAccess().getSTRINGEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='java.lang.Date'
			{
				$current = grammarAccess.getInternalTypeAccess().getDATEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getInternalTypeAccess().getDATEEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='java.lang.DateTime'
			{
				$current = grammarAccess.getInternalTypeAccess().getDATETIMEEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getInternalTypeAccess().getDATETIMEEnumLiteralDeclaration_8());
			}
		)
		    |
		(
			enumLiteral_9='java.lang.Time'
			{
				$current = grammarAccess.getInternalTypeAccess().getTIMEEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_9, grammarAccess.getInternalTypeAccess().getTIMEEnumLiteralDeclaration_9());
			}
		)
		    |
		(
			enumLiteral_10='java.util.List'
			{
				$current = grammarAccess.getInternalTypeAccess().getLISTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_10, grammarAccess.getInternalTypeAccess().getLISTEnumLiteralDeclaration_10());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
